'''
projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

******************************

This solution is an iterative solution with O(n) complexity 
'''

import time

start = time.time()

i_1 = 1 #initialize the first number in sequence
i_2 = 2 #initialize the second number in sequence
sum = 2 #initialize the sum variable to 2 as the following loop
        #does not catch the first value divisible by 2

while i_1+i_2 < 4000000: #loop until the given limit

    swap = i_2 #create a swap variable to hold i_2 
    i_2 = i_1 + i_2 #new i_2 is the sum of itself and i_1
    i_1 = swap #new i_1 is old i_2

    if i_2%2 == 0: #if i_2 is divisible by 2 then add to sum
        sum += i_2

end = time.time()

print(sum)
print(end-start)

#FINAL SOLUTION: 4613732 TIME: 1.811981201171875e-05s
